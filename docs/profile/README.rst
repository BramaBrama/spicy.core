spicy.core.profile
******************

Назначение
==================
spicy.core.profile является модулем spicy.core. Позволяет управлять учетными записями на сайте, настраивать механизмы регистрации и авторизации, поддерживает работу с социальными сетями, email-рассылкой, разделением прав доступа по группам. Позволяет распределять пользователей между несколькими сайтами посредством `django sites framework <https://djbook.ru/rel1.4/ref/contrib/sites.html>`_.

Аналоги
=======

* `django-registration-renux <https://github.com/macropin/django-registration>`_ 
* `django-registration <https://github.com/ubernostrum/django-registration>`_ 
* `django-allauth <https://github.com/pennersr/django-allauth>`_ 

Эти приложения требуют Django 1.8+, spicy.core.profile позволяет использовать Django 1.3-1.5 и реализует дополнительные возможности, которых нет в django-registration-renux и django-registration - интеграцию с соцсетями, разделение прав доступа.

Для администратора сайта
========================

Статусы пользователей
---------------------
По умолчанию новый пользователь, который регистрируется в системе, не имеет статуса. При этом на указанную почту отправляется активационная ссылка, при переходе по ней, присваивается статус Активный. Можно настраивать доступ пользователя к сайту с помощью статусов:

* активный - может просматривать публичные страницы сайта, оставлять комментарии, добавлять контент через интерфейс сайта; не имеет доступ в административную часть
* забанен - может просматривать публичные страницы; не может оставлять комментарии, добавлять контент через интерфейс; не имеет доступ в административную часть; рассматривается как анонимный пользователь.

Также каждому пользователю можно назначить 2 привелегированных статуса:

* персонал - пользователь имеет полный доступ к публичной части сайта; имеет доступ к административной части, ограниченный личными и групповыми правами 
* суперпользователь - имеет полный доступ к публичной и административной частям сайта

Управление правами доступа
--------------------------
Для разделения доступа к разделам могут быть использованы личные и групповые права. Они используются в SpicyCMS для ограничения доступа к модулям проекта в административной части. Но также могут быть использованы в публичной части, подробнее 
в `документации Django о правах пользователя <https://djbook.ru/rel1.4/topics/auth.html#django.contrib.auth.decorators.permission_required>`_.

Для каждого модуля SpicyCMS используется 3 типа прав:

* can add <Object> - пользователь может добавлять объекты, но не может видеть список
* can change <Object> - пользователь может реактировать объекты и видеть список
* can delete <Object> - пользователь может удалять объекты, но ему не доступен общий список (рекомендуется использовать совместно с can change <Object>)

Групповые и личные права объединяются для каждого пользователя. Так вы можете управлять доступом для нескольких пользователей через права группы и для каждого в отдельности выделять особые права, которые откроют доступ к разделам, не доступным другим членам группы.
У суперпользователя права не проверяются.

Для Django программиста
=======================

spicy.core.profile предоставляет абстрактный базовый класс для профиля пользователя ``models.AbstractProfile``, который наследуется от ``Django auth.User``. 

Делаем свою модель профайла
---------------------------
По умолчанию используется модель ``models.TestProfile``, унаследованная от абстрактного ``AbstractProfile``. Вы можете переопределить это поведение, для этого в settings.py укажите: ::

  CUSTOM_USER_MODEL = 'yourapp.models.CustomProfile'
  
И определите модель, которая будет использована в качестве профайла: ::

  # yourapp.models.py
  from spicy.core.profile.models import AbstractProfile
 
  class CustomProfile(AbstractProfile):
    # your additional fields
    class Meta:
      abstract = False

{TODO} Кастомные профили, настройки settings.py, команды менеджмента, декораторы, контекстные процессоры



MANUAL_ACTIVATION - влияет на значение по умолчанию для Profile.is_banned
PASSWORD_HASH_KEY - указывает, какой ключ используется для передачи хэш-пароля в сессии

Для верстальщика
===============
{TODO} Описать возможности переопределения шаблонов по умолчанию, переменные контекстных процессоров


